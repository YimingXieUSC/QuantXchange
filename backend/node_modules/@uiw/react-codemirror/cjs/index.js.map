{
  "version": 3,
  "names": [
    "_react",
    "_interopRequireWildcard",
    "require",
    "_useCodeMirror2",
    "Object",
    "keys",
    "forEach",
    "key",
    "prototype",
    "hasOwnProperty",
    "call",
    "_exportNames",
    "exports",
    "defineProperty",
    "enumerable",
    "get",
    "_jsxRuntime",
    "_codemirrorExtensionsBasicSetup",
    "_utils",
    "_excluded",
    "ReactCodeMirror",
    "forwardRef",
    "props",
    "ref",
    "className",
    "_props$value",
    "value",
    "selection",
    "_props$extensions",
    "extensions",
    "onChange",
    "onStatistics",
    "onCreateEditor",
    "onUpdate",
    "autoFocus",
    "_props$theme",
    "theme",
    "height",
    "minHeight",
    "maxHeight",
    "width",
    "minWidth",
    "maxWidth",
    "basicSetup",
    "placeholder",
    "indentWithTab",
    "editable",
    "readOnly",
    "root",
    "initialState",
    "other",
    "_objectWithoutProperties2",
    "editor",
    "useRef",
    "_useCodeMirror",
    "useCodeMirror",
    "container",
    "current",
    "state",
    "view",
    "useImperativeHandle",
    "Error",
    "concat",
    "_typeof2",
    "defaultClassNames",
    "jsx",
    "_objectSpread2",
    "displayName",
    "_default"
  ],
  "sources": [
    "../src/index.tsx"
  ],
  "sourcesContent": [
    "import React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { EditorState, EditorStateConfig, Extension, StateField } from '@codemirror/state';\nimport { EditorView, ViewUpdate } from '@codemirror/view';\nimport { BasicSetupOptions } from '@uiw/codemirror-extensions-basic-setup';\nimport { useCodeMirror } from './useCodeMirror';\nimport { Statistics } from './utils';\n\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './utils';\n\nexport interface ReactCodeMirrorProps\n  extends Omit<EditorStateConfig, 'doc' | 'extensions'>,\n    Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'placeholder'> {\n  /** value of the auto created model in the editor. */\n  value?: string;\n  height?: string;\n  minHeight?: string;\n  maxHeight?: string;\n  width?: string;\n  minWidth?: string;\n  maxWidth?: string;\n  /** focus on the editor. */\n  autoFocus?: boolean;\n  /** Enables a placeholder—a piece of example content to show when the editor is empty. */\n  placeholder?: string | HTMLElement;\n  /**\n   * `light` / `dark` / `Extension` Defaults to `light`.\n   * @default light\n   */\n  theme?: 'light' | 'dark' | 'none' | Extension;\n  /**\n   * Whether to optional basicSetup by default\n   * @default true\n   */\n  basicSetup?: boolean | BasicSetupOptions;\n  /**\n   * This disables editing of the editor content by the user.\n   * @default true\n   */\n  editable?: boolean;\n  /**\n   * This disables editing of the editor content by the user.\n   * @default false\n   */\n  readOnly?: boolean;\n  /**\n   * Whether to optional basicSetup by default\n   * @default true\n   */\n  indentWithTab?: boolean;\n  /** Fired whenever a change occurs to the document. */\n  onChange?(value: string, viewUpdate: ViewUpdate): void;\n  /** Some data on the statistics editor. */\n  onStatistics?(data: Statistics): void;\n  /** Fired whenever any state change occurs within the editor, including non-document changes like lint results. */\n  onUpdate?(viewUpdate: ViewUpdate): void;\n  /** The first time the editor executes the event. */\n  onCreateEditor?(view: EditorView, state: EditorState): void;\n  /**\n   * Extension values can be [provided](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions) when creating a state to attach various kinds of configuration and behavior information.\n   * They can either be built-in extension-providing objects,\n   * such as [state fields](https://codemirror.net/6/docs/ref/#state.StateField) or [facet providers](https://codemirror.net/6/docs/ref/#state.Facet.of),\n   * or objects with an extension in its `extension` property. Extensions can be nested in arrays arbitrarily deep—they will be flattened when processed.\n   */\n  extensions?: Extension[];\n  /**\n   * If the view is going to be mounted in a shadow root or document other than the one held by the global variable document (the default), you should pass it here.\n   * Originally from the [config of EditorView](https://codemirror.net/6/docs/ref/#view.EditorView.constructor%5Econfig.root)\n   */\n  root?: ShadowRoot | Document;\n  /**\n   * Create a state from its JSON representation serialized with [toJSON](https://codemirror.net/docs/ref/#state.EditorState.toJSON) function\n   */\n  initialState?: {\n    json: any;\n    fields?: Record<string, StateField<any>>;\n  };\n}\n\nexport interface ReactCodeMirrorRef {\n  editor?: HTMLDivElement | null;\n  state?: EditorState;\n  view?: EditorView;\n}\n\nconst ReactCodeMirror = forwardRef<ReactCodeMirrorRef, ReactCodeMirrorProps>((props, ref) => {\n  const {\n    className,\n    value = '',\n    selection,\n    extensions = [],\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    autoFocus,\n    theme = 'light',\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    root,\n    initialState,\n    ...other\n  } = props;\n  const editor = useRef<HTMLDivElement>(null);\n  const { state, view, container } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState,\n  });\n\n  useImperativeHandle(ref, () => ({ editor: editor.current, state: state, view: view }), [\n    editor,\n    container,\n    state,\n    view,\n  ]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(`value must be typeof string but got ${typeof value}`);\n  }\n\n  const defaultClassNames = typeof theme === 'string' ? `cm-theme-${theme}` : 'cm-theme';\n  return <div ref={editor} className={`${defaultClassNames}${className ? ` ${className}` : ''}`} {...other}></div>;\n});\n\nReactCodeMirror.displayName = 'CodeMirror';\n\nexport default ReactCodeMirror;\n"
  ],
  "mappings": "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"
}